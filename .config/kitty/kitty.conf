# BEGIN_KITTY_THEME
# Catppuccin Mocha ðŸŒ¿
include current-theme.conf
# END_KITTY_THEME
# 
scrollback_lines 5000
input_delay 5
allow_remote_control socket-only
listen_on unix:@mykitty
# Change kitty fonts
# font_family JetBrains Mono Regular Nerd Font Complete
# bold_font JetBrains Mono Bold Nerd Font Complete
# italic_font JetBrains Mono Italic Nerd Font Complete
# bold_italic_font JetBrains Mono Bold Italic Nerd Font Complete
# font_size 12
font_family JetBrains Mono Regular
bold_font JetBrains Mono Bold
italic_font JetBrains Mono Italic
bold_italic_font JetBrains Mono Bold Italic
font_size 12
# - Use additional nerd symbols
# See https://github.com/be5invis/Iosevka/issues/248
# See https://github.com/ryanoasis/nerd-fonts/wiki/Glyph-Sets-and-Code-Points
# Seti-UI + Custom
symbol_map U+E5FA-U+E62B Symbols Nerd Font Mono
# Devicons
symbol_map U+E700-U+E7C5 Symbols Nerd Font Mono
# Font Awesome
symbol_map U+F000-U+F2E0 Symbols Nerd Font Mono
# Font Awesome Extension
symbol_map U+E200-U+E2A9 Symbols Nerd Font Mono
# Material Design Icons
symbol_map U+F500-U+FD46 Symbols Nerd Font Mono
# Weather
symbol_map U+E300-U+E3EB Symbols Nerd Font Mono
# Octicons
symbol_map U+F400-U+F4A8,U+2665,U+26A1,U+F27C Symbols Nerd Font Mono
# Powerline Extra Symbols
symbol_map U+E0A3,U+E0B4-U+E0C8,U+E0CC-U+E0D2,U+E0D4 Symbols Nerd Font Mono
# IEC Power Symbols
symbol_map U+23FB-U+23FE,U+2b58 Symbols Nerd Font Mono
# Font Logos
symbol_map U+F300-U+F313 Symbols Nerd Font Mono
# Pomicons
symbol_map U+E000-U+E00D Symbols Nerd Font Mono

inactive_text_alpha 0.85
# Change Kitty's default editor
editor nvim

# Force LTR 
force_ltr yes

# Remove title-bar and window borders
hide_window_decorations yes

# Enabled layouts
enabled_layouts splits:bias=70

# Window Layout
resize_in_steps yes

# Change default pager
scrollback_pager bat


# --[ tabs ] --------------------------------------------------------------- {{{
# fade, slant, separator, powerline (slanted, angled, round), custom
tab_bar_style                   separator
tab_separator                   ""
tab_title_template              "{fmt.fg.grey}{fmt.bg.default}î‚¶{fmt.fg.black}{fmt.bg.grey} {title.split()[0]} {fmt.fg.grey}{fmt.bg.default}î‚´ "
active_tab_title_template       "{fmt.fg.orange}{fmt.bg.default}î‚¶{fmt.fg.black}{fmt.bg.orange} {title.split()[0]} {fmt.fg.orange}{fmt.bg.default}î‚´ "
tab_bar_align center
#}}}

# Opacity
background_opacity 0.85
# background_tint 0.5
# background_image /home/lucario387/.local/share/backgrounds/11.png
dynamic_background_opacity yes
tab_bar_edge top
# Create a new window splitting the space used by the existing one so that
# the two windows are placed one above the other
# map F5 launch --location=hsplit --cwd=current

# Create a new window splitting the space used by the existing one so that
# the two windows are placed side by side
# map F6 launch --location=vsplit --cwd=current

# Create a new window splitting the space used by the existing one so that
# the two windows are placed side by side if the existing window is wide or
# one above the other if the existing window is tall.
# map F4 launch --location=split --cwd=current

# Rotate the current split, chaging its split axis from vertical to
# horizontal or vice versa
map F7 layout_action rotate

# Move the active window in the indicated direction
map shift+left move_window left
map shift+right move_window right
map shift+up move_window up
map shift+down move_window down

# map ctrl+left resize_window narrower
# map ctrl+right resize_window wider
# map ctrl+up resize_window taller
# map ctrl+down resize_window shorter 3
# # reset all windows in the tab to default sizes
# map ctrl+home resize_window reset

# Switch focus to the neighboring window in the indicated direction
map ctrl+shift+h neighboring_window left
map ctrl+shift+l neighboring_window right
map ctrl+shift+k neighboring_window top
map ctrl+shift+j neighboring_window bottom

map ctrl+h kitten pass_keys.py neighboring_window left ctrl+h
map ctrl+j kitten pass_keys.py neighboring_window bottom ctrl+j
map ctrl+k kitten pass_keys.py neighboring_window top ctrl+k
map ctrl+l kitten pass_keys.py neighboring_window right ctrl+l

# Change new_window keybinding to new_window_with_cwd for easier navigation when needed
map ctrl+shift+enter launch --allow-remote-control --location=split --cwd=current

# Movement between tabs
map ctrl+1 goto_tab 1
map ctrl+2 goto_tab 2 
map ctrl+3 goto_tab 3 
map ctrl+4 goto_tab 4 
map ctrl+5 goto_tab 5 
map ctrl+6 goto_tab 6 
map ctrl+7 goto_tab 7 
map ctrl+8 goto_tab 8 
map ctrl+9 goto_tab 9 

# Shift + Enter
map shift+enter send_text all \x1b[13;2u

# Ctrl + I Remaps
map ctrl+i send_text all \x1b[105;5u

# Ctrl + . , ;

map ctrl+. send_text all \x1b[46;5u
map ctrl+, send_text all \x1b[44;5u
map ctrl+; send_text all \x1b[59;5u

map ctrl+left resize_window narrower 2
map ctrl+right resize_window wider 2
map ctrl+up resize_window taller 2
map ctrl+down resize_window shorter 2
# map ctrl+enter send_text all \x1b[13;5u
# map ctrl+shift+enter send_text all \x1b[13;6u
#
# map ;6u launch --allow-remote-control --location=split --cwd=current

# Ctrl + Shift Remaps

# map ctrl+shift+h send_text all \x1b[72;6u
# map ctrl+shift+j send_text all \x1b[74;6u
# map ctrl+shift+k send_text all \x1b[75;6u
# map ctrl+shift+l send_text all \x1b[76;6u
